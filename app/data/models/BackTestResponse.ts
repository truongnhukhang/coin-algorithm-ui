/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BackTestRequest,
    BackTestRequestFromJSON,
    BackTestRequestFromJSONTyped,
    BackTestRequestToJSON,
    BalanceDto,
    BalanceDtoFromJSON,
    BalanceDtoFromJSONTyped,
    BalanceDtoToJSON,
    CandleDto,
    CandleDtoFromJSON,
    CandleDtoFromJSONTyped,
    CandleDtoToJSON,
    DrawdownDto,
    DrawdownDtoFromJSON,
    DrawdownDtoFromJSONTyped,
    DrawdownDtoToJSON,
    StreakDto,
    StreakDtoFromJSON,
    StreakDtoFromJSONTyped,
    StreakDtoToJSON,
    TradePointDto,
    TradePointDtoFromJSON,
    TradePointDtoFromJSONTyped,
    TradePointDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface BackTestResponse
 */
export interface BackTestResponse {
    /**
     * 
     * @type {BackTestRequest}
     * @memberof BackTestResponse
     */
    backTestRequest: BackTestRequest;
    /**
     * 
     * @type {number}
     * @memberof BackTestResponse
     */
    pnl: number;
    /**
     * 
     * @type {number}
     * @memberof BackTestResponse
     */
    fee: number;
    /**
     * 
     * @type {number}
     * @memberof BackTestResponse
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof BackTestResponse
     */
    numLoose: number;
    /**
     * 
     * @type {number}
     * @memberof BackTestResponse
     */
    numWin: number;
    /**
     * 
     * @type {number}
     * @memberof BackTestResponse
     */
    avglooseStreak: number;
    /**
     * 
     * @type {number}
     * @memberof BackTestResponse
     */
    avgWinStreak: number;
    /**
     * 
     * @type {Array<CandleDto>}
     * @memberof BackTestResponse
     */
    candleDtos: Array<CandleDto>;
    /**
     * 
     * @type {Array<TradePointDto>}
     * @memberof BackTestResponse
     */
    tradePointDtos?: Array<TradePointDto>;
    /**
     * 
     * @type {Array<BalanceDto>}
     * @memberof BackTestResponse
     */
    balanceDtos?: Array<BalanceDto>;
    /**
     * 
     * @type {DrawdownDto}
     * @memberof BackTestResponse
     */
    drawDownVal?: DrawdownDto;
    /**
     * 
     * @type {DrawdownDto}
     * @memberof BackTestResponse
     */
    drawdownPer?: DrawdownDto;
    /**
     * 
     * @type {StreakDto}
     * @memberof BackTestResponse
     */
    looseStreak?: StreakDto;
    /**
     * 
     * @type {StreakDto}
     * @memberof BackTestResponse
     */
    winStreak?: StreakDto;
}

export function BackTestResponseFromJSON(json: any): BackTestResponse {
    return BackTestResponseFromJSONTyped(json, false);
}

export function BackTestResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BackTestResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'backTestRequest': BackTestRequestFromJSON(json['backTestRequest']),
        'pnl': json['pnl'],
        'fee': json['fee'],
        'total': json['total'],
        'numLoose': json['numLoose'],
        'numWin': json['numWin'],
        'avglooseStreak': json['avglooseStreak'],
        'avgWinStreak': json['avgWinStreak'],
        'candleDtos': ((json['candleDtos'] as Array<any>).map(CandleDtoFromJSON)),
        'tradePointDtos': !exists(json, 'tradePointDtos') ? undefined : ((json['tradePointDtos'] as Array<any>).map(TradePointDtoFromJSON)),
        'balanceDtos': !exists(json, 'balanceDtos') ? undefined : ((json['balanceDtos'] as Array<any>).map(BalanceDtoFromJSON)),
        'drawDownVal': !exists(json, 'drawDownVal') ? undefined : DrawdownDtoFromJSON(json['drawDownVal']),
        'drawdownPer': !exists(json, 'drawdownPer') ? undefined : DrawdownDtoFromJSON(json['drawdownPer']),
        'looseStreak': !exists(json, 'looseStreak') ? undefined : StreakDtoFromJSON(json['looseStreak']),
        'winStreak': !exists(json, 'winStreak') ? undefined : StreakDtoFromJSON(json['winStreak']),
    };
}

export function BackTestResponseToJSON(value?: BackTestResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'backTestRequest': BackTestRequestToJSON(value.backTestRequest),
        'pnl': value.pnl,
        'fee': value.fee,
        'total': value.total,
        'numLoose': value.numLoose,
        'numWin': value.numWin,
        'avglooseStreak': value.avglooseStreak,
        'avgWinStreak': value.avgWinStreak,
        'candleDtos': ((value.candleDtos as Array<any>).map(CandleDtoToJSON)),
        'tradePointDtos': value.tradePointDtos === undefined ? undefined : ((value.tradePointDtos as Array<any>).map(TradePointDtoToJSON)),
        'balanceDtos': value.balanceDtos === undefined ? undefined : ((value.balanceDtos as Array<any>).map(BalanceDtoToJSON)),
        'drawDownVal': DrawdownDtoToJSON(value.drawDownVal),
        'drawdownPer': DrawdownDtoToJSON(value.drawdownPer),
        'looseStreak': StreakDtoToJSON(value.looseStreak),
        'winStreak': StreakDtoToJSON(value.winStreak),
    };
}


