/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BackTestResponse,
    BackTestResponseFromJSON,
    BackTestResponseFromJSONTyped,
    BackTestResponseToJSON,
} from './';

/**
 * 
 * @export
 * @interface BackTestRun
 */
export interface BackTestRun {
    /**
     * 
     * @type {boolean}
     * @memberof BackTestRun
     */
    done: boolean;
    /**
     * 
     * @type {number}
     * @memberof BackTestRun
     */
    position: number;
    /**
     * 
     * @type {string}
     * @memberof BackTestRun
     */
    ident?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof BackTestRun
     */
    config?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof BackTestRun
     */
    path?: string;
    /**
     * 
     * @type {BackTestResponse}
     * @memberof BackTestRun
     */
    backTestResponse?: BackTestResponse;
}

export function BackTestRunFromJSON(json: any): BackTestRun {
    return BackTestRunFromJSONTyped(json, false);
}

export function BackTestRunFromJSONTyped(json: any, ignoreDiscriminator: boolean): BackTestRun {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'done': json['done'],
        'position': json['position'],
        'ident': !exists(json, 'ident') ? undefined : json['ident'],
        'config': !exists(json, 'config') ? undefined : json['config'],
        'path': !exists(json, 'path') ? undefined : json['path'],
        'backTestResponse': !exists(json, 'backTestResponse') ? undefined : BackTestResponseFromJSON(json['backTestResponse']),
    };
}

export function BackTestRunToJSON(value?: BackTestRun | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'done': value.done,
        'position': value.position,
        'ident': value.ident,
        'config': value.config,
        'path': value.path,
        'backTestResponse': BackTestResponseToJSON(value.backTestResponse),
    };
}


