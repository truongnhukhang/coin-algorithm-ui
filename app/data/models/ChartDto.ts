/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PlotDto,
    PlotDtoFromJSON,
    PlotDtoFromJSONTyped,
    PlotDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface ChartDto
 */
export interface ChartDto {
    /**
     * 
     * @type {boolean}
     * @memberof ChartDto
     */
    overlay: boolean;
    /**
     * 
     * @type {number}
     * @memberof ChartDto
     */
    width: number;
    /**
     * 
     * @type {number}
     * @memberof ChartDto
     */
    height: number;
    /**
     * 
     * @type {string}
     * @memberof ChartDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ChartDto
     */
    backgroundColor?: string;
    /**
     * 
     * @type {Array<PlotDto>}
     * @memberof ChartDto
     */
    plotList?: Array<PlotDto>;
}

export function ChartDtoFromJSON(json: any): ChartDto {
    return ChartDtoFromJSONTyped(json, false);
}

export function ChartDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChartDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'overlay': json['overlay'],
        'width': json['width'],
        'height': json['height'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'backgroundColor': !exists(json, 'backgroundColor') ? undefined : json['backgroundColor'],
        'plotList': !exists(json, 'plotList') ? undefined : ((json['plotList'] as Array<any>).map(PlotDtoFromJSON)),
    };
}

export function ChartDtoToJSON(value?: ChartDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'overlay': value.overlay,
        'width': value.width,
        'height': value.height,
        'name': value.name,
        'backgroundColor': value.backgroundColor,
        'plotList': value.plotList === undefined ? undefined : ((value.plotList as Array<any>).map(PlotDtoToJSON)),
    };
}


